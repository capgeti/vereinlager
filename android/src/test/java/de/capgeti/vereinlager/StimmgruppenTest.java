package de.capgeti.vereinlager;

import de.capgeti.vereinlager.model.Stimmgruppe;
import org.junit.Before;
import org.junit.Test;

import java.util.Iterator;

import static junit.framework.Assert.*;

/**
 * Author: capgeti
 * Date:   06.10.13 00:22
 */
public class StimmgruppenTest {

    private TestStimmgruppeHandler dbHandler;

    @Before
    public void setUp() throws Exception {
        dbHandler = new TestStimmgruppeHandler();
    }

    @Test
    public void testCreateStimmgruppe() throws Exception {
        final Stimmgruppe stimmgruppe = dbHandler.createStimmgruppe("Test1");
        assertEquals("Test1", stimmgruppe.getName());
        assertEquals(new Integer(0), stimmgruppe.getPersonen());
    }

    @Test
    public void testDeleteStimmgruppe() throws Exception {
        final Stimmgruppe stimmgruppe = dbHandler.createStimmgruppe("Test1");
        dbHandler.deleteStimmgruppe(stimmgruppe.getId());
        final Stimmgruppe stimmgruppe1 = dbHandler.loadStimmgruppe(stimmgruppe.getId());
        assertNull(stimmgruppe1);
    }

    @Test
    public void testEditStimmgruppe() throws Exception {
        final Stimmgruppe stimmgruppe = dbHandler.createStimmgruppe("Test1");
        final Stimmgruppe update = dbHandler.editStimmgruppe(stimmgruppe.getId(), "Test2");
        assertEquals("Test2", update.getName());
    }

    @Test
    public void testLoadStimmgruppe() throws Exception {
        final Stimmgruppe stimmgruppe = dbHandler.createStimmgruppe("Test1");
        final Stimmgruppe load = dbHandler.loadStimmgruppe(stimmgruppe.getId());
        assertEquals("Test1", load.getName());
    }

    @Test
    public void testListStimmgruppen() throws Exception {
        dbHandler.createStimmgruppe("test1");
        dbHandler.createStimmgruppe("test2");

        final Iterator<Stimmgruppe> stimmgruppeList = dbHandler.listStimmgruppen().iterator();

        assertEquals("test1", stimmgruppeList.next().getName());
        assertEquals("test2", stimmgruppeList.next().getName());

        assertFalse(stimmgruppeList.hasNext());
    }
}
